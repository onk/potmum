.article-viewer
  .content-header.article-header
    .uk-container.uk-container-center
      .uk-grid
        .uk-width-medium-7-10
          h1.article-title
            - if @article.private_item?
              i.fa.fa-lock
              | &nbsp;
            = @article_d.title
          ul.article-tags
            - if @article.tags.count > 0
              - @article.tags.each do |tag|
                li
                  a.tag-content href=tag_path(tag)
                    = tag.name
                  - if @article.public_item?
                    a.tag-count href=tag_path(tag)
                      = tag.article_count
            - else
              p style='opacity: .5;'
                | 登録タグはありません
          .article-author
            a href=user_path(name: @article.user)
              img.avatar-image src=@article_d.user.avatar_url
              = @article_d.user.name
            | &nbsp;が #{l((@article_d.published_at || @article.created_at).to_date)} に投稿&nbsp;-&nbsp;
            a href=article_revisions_path(article_id: @article)
              | 編集履歴(#{@article.revisions.published.count})
          br.uk-visible-small
        .uk-width-medium-3-10
          ul.article-score
            li.article-score-item
              = @article_d.view_count
              .article-score-name
                | View
            li.article-score-item
              = @article_d.like_count
              .article-score-name
                | いいね
            li.article-score-item
              = @article_d.comment_count
              .article-score-name
                | コメント
          .uk-text-center.uk-margin-bottom
            - if current_user == @article.user
              .uk-button-group
                a.uk-button.uk-button-large.uk-button-primary href=edit_article_path(@article, name: @article.user.name)
                  i.fa.fa-pencil
                  | &nbsp;編集する
                a.uk-button.uk-button-large.uk-button-danger href=article_path(@article, name: @article.user.name) data-method='delete' data-confirm='削除してもよろしいでしょうか？'
                  | 削除
            - elsif current_user
              .uk-width-4-5.uk-container-center
                .js-like-button.uk-width-3-4 data-url=article_like_path(article_id: @article, format: 'json') data-name="liked" data-checked=(current_user.liked?(@article) ? 1 : 0) style='float: left'
                  button.uk-button.uk-button-large.uk-button-primary.uk-width-1-1 v-show='!checked' v-on:click='onClick' style='display: none;'
                      i.fa.fa-heart-o
                      | &nbsp;いいね
                  button.uk-button.uk-button-large.uk-width-1-1.uk-button-success v-show='checked' v-on:click='onClick' style='display: none;'
                      i.fa.fa-heart
                      | &nbsp;いいね
                .js-stock-button.uk-width-1-4 data-url=article_stock_path(article_id: @article, format: 'json') data-name="stocked" data-checked=(current_user.stocked?(@article) ? 1 : 0) style='float: right'
                  button.uk-button.uk-button-large.uk-button-primary.uk-width-1-1 v-show='!checked' v-on:click='onClick' style='display: none;' title='ストックする'
                    i.fa.fa-folder
                  button.uk-button.uk-button-large.uk-width-1-1 v-show='checked' v-on:click='onClick' style='display: none;' title='ストック済み'
                    i.fa.fa-check

    - if @article.private_item?
      .content-header-alert
        .uk-container.uk-container-center
          i.fa.fa-lock
          | &nbsp;この記事はURLを知る人だけがアクセスできる限定公開記事です

  .article-main
    .uk-container.uk-container-center
      .uk-grid
        .uk-width-medium-7-10.uk-margin-bottom
          .uk-panel.uk-panel-box.markdown
            = cache "article-markdown--#{@article.id}--#{@article.updated_at}" do
              == @article_d.markdown_html

          h3 コメント
          - comments = @article_d.comments
          - if comments.size > 0
            .uk-panel.uk-panel-box.uk-margin-top
              == render('/comments/list', comments: comments)

          - if current_user
            .js-comment-form.uk-margin-top data-url=article_comments_path(article_id: @article, name: @article.user.name, format: 'json')
              ul.uk-tab
                li v-bind:class='{"uk-active": !modePreview}'
                  a href='#' v-on:click='changeToForm'
                    | コメント
                li v-bind:class='{"uk-active": modePreview}'
                  a href='#' v-on:click='changeToPreview'
                    | プレビュー
              .uk-panel.uk-panel-box
                form.uk-form action='#' v-on:submit='onSubmit'
                  .comment-input-area v-show='!modePreview'
                    textarea.uk-width-1-1 style='min-height: 8em;' name='body' v-model='bodyField'
                  .comment-preview-area v-show='modePreview'
                    .markdown
                      | {{{preview_html}}}
                  .uk-grid.uk-margin-top
                    .uk-width-1-4.uk-text-large
                      span class="{{count < 0 ? 'uk-text-danger' : 'uk-text-muted'}}"
                        | {{count}}
                    .uk-width-3-4.uk-text-right
                      button.uk-button.uk-button-primary type='submit' disabled="{{(sendingFlag || count < 0 || body.length == 0) ? 'disabled' : null}}"
                        i.fa.fa-pencil
                        | &nbsp;コメント投稿

          - else
            p
              | コメントを投稿するためにはログインが必要です。

        .uk-width-medium-3-10.uk-margin-bottom
          .article-sidebar.uk-margin-bottom
            .article-author.uk-margin-bottom
              a href=user_path(name: @article.user)
                img.avatar-image src=@article_d.user.avatar_url
              .article-author-name
                a href=user_path(name: @article.user)
                  = @article_d.user.name
              .article-author-text
                | #{@article_d.user.like_count} Contributes
            .article-author-link.uk-margin-top
              h4 人気の投稿
              ul.uk-list.uk-list-line
                - @article.user.articles.popular.limit(5).each do |article|
                  li
                    a href=article_path(article, name: article.user.name)
                      = article.title
            .article-index
              h4 見出し
              = cache "article-index--#{@article.id}--#{@article.updated_at}" do
                == @article_d.newest_revision.markdown_toc_html

- content_for(:title) do
  == @article.title
